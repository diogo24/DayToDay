@model WorldCupViewModel

@{
    ViewData["Title"] = "Index";
}

<h2>World Cup 2018 - Russia</h2>

<div class="row">
    <div class="col-md-4">
        @foreach (var groupMatch in Model.GroupMatches)
        {
        <ul class="list-inline">
            <li>@groupMatch.Match.HomeTeam.TeamName</li>
            <li>@groupMatch.Match.HomeTeamScore</li>
            <li>vs</li>
            <li>@groupMatch.Match.AwayTeamScore</li>
            <li>@groupMatch.Match.AwayTeam.TeamName</li>

            @if(!groupMatch.Match.HomeTeamScore.HasValue) { 
                <li>
                    <a href="@Url.Action("UpdateScore", "WorldCup", new { HomeTeam = groupMatch.Match.HomeTeam.TeamName, AwayTeam = groupMatch.Match.AwayTeam.TeamName, MatchNumber = groupMatch.Match.Number })">
                        <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                    </a>
                </li>
            }

        </ul>
        }
    </div>
    <div class="col-md-4">
        <p><a href="@Url.Action("GroupsTablesDetails", "WorldCup")" class="btn btn-primary">Groups Tables Details</a></p>
        @foreach (var group in Model.Groups.OrderBy(s => (int)s.GroupLetter))
        {
            <h3>@(group.GroupLetter)</h3>
            <table>
                <thead>
                    <tr>
                        <th>Position</th>
                        <th>Team Name</th>
                        @*<th>Games Played</th>
                        <th>Wins</th>
                        <th>Draws</th>
                        <th>Defeats</th>
                        <th>Goals For</th>
                        <th>Goals Against</th>*@
                        <th>Points</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var groupRow in group.GroupRows.OrderBy(s => s.GroupPosition))
                    {
                    <tr>
                        <td>@((int)groupRow.GroupPosition)</td>
                        <td>@groupRow.Team.TeamName</td>
                        @*<td>@groupRow.GamesPlayed</td>
                        <td>@groupRow.Wins</td>
                        <td>@groupRow.Draws</td>
                        <td>@groupRow.Defeats</td>
                        <td>@groupRow.GoalsFor</td>
                        <td>@groupRow.GoalsAgainst</td>*@
                        <td>@groupRow.Points</td>
                    </tr>
                    }
                </tbody>
            </table>
        }
    </div>
    <div class="col-md-4">
        @for (int i = 1; i <= Model.NumbertOfRounds; i++)
        {
            <h3>
                <b>@Enum.GetName(typeof(EliminationFaseRoundEnum), i)</b>
            </h3>
            
                var eliminationRoundValue = (EliminationFaseRoundEnum) i;
                var roundMatches = Model.EliminationFase.Where(s => s.EliminationFaaseRound == eliminationRoundValue)
                    .OrderBy(s => s.RoundIndex);
            

            @foreach (var round in roundMatches)
            {
                <ul class="list-inline">
                    <li>@round.Match.HomeTeam.TeamName</li>
                    @if (round.HasPenalties)
                    {
                        <li>@(round.Match.HomeTeamScore)(@(round.Match.HomeTeamScorePenalties))</li>
                    }
                    else { 
                        <li>@(round.Match.HomeTeamScore)</li>
                    }
                    <li>vs</li>
                    @if (round.HasPenalties)
                    {
                        <li>@(round.Match.AwayTeamScore)(@(round.Match.AwayTeamScorePenalties))</li>
                    }
                    else { 
                        <li>@(round.Match.AwayTeamScore)</li>
                    }
                    <li>@round.Match.AwayTeam.TeamName</li>
                    @if(!round.Match.HomeTeamScore.HasValue) { 
                        <li>
                            <a href="@Url.Action("UpdateScoreElimination", "WorldCup", new { HomeTeam = round.Match.HomeTeam.TeamName, AwayTeam = round.Match.AwayTeam.TeamName, MatchNumber = round.Match.Number })">
                                <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                            </a>
                        </li>
                    }
                </ul>
            }
        }
    </div>
</div>

